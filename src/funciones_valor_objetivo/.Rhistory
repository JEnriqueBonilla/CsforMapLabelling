mm
length(mm)
size(mm)
dim(mm)
pas<-dim(mm)
pas
pas[1]
dim(mm)[1]
cenrto<-c(100,20)
centro
centro<-c(100,20)
length(centro)
mm[1,]
centro<-c(1,2,3,4,5,6,7,8)
centro
cambio<-c(-1,-1,-1,-1,-1,-1,-1,-1)
cambio
cambio<-c(2,2,2,2,2,2,2,2)
cambio
cambio*mm[1,:]
cambio*mm[1,:]'
mm[1,:]'
mm[1, :]
cambio*mm[1,]'
as
sds
fahfvaiss
1
23+
sñl
rqj´0rjf´9qwoiv
3121
end
====
1oj3
<.
1'2'
cambio*mm[1,]
centro
centro+(cambio*mm)
centro<-c(1,2,3,4,5,6,7,8)
centro
cambio
mm
centro
centro+cambio*mm[1:]
centro+(cambio*mm[1,])
centro+(cambio*mm[256,])
centro+(mm*cambio)
(mm*cambio)+centro
(mm*cambio)
nueva<-(mm*cambio)
nueva
nueva+centro
nueva
rep(centro,1)
rep(centro,3)
rep(centro,256)
nueva+rep(centro,256)
nueva[256,]
nueva[256,]+centro
nueva[,]+centro
nueva[256,]+centro
apply(nueva,centro,sum)
x <- matrix(runif(100), ncol = 5)
group <- sample(1:8, 20, TRUE)
(xsum <- rowsum(x, group))
x <- matrix(runif(100), ncol = 5)
x
group
x <- matrix(runif(100), ncol = 5)
group <- sample(1:8, 20, TRUE)
(xsum <- rowsum(x, group))
nueva
centro
sum(centro,nueva)
nueva
nueva+centro[,]
nueva
z<-8
mm <- matrix(0, 2^z, z)
j<-1
for(i8 in 1:2)
{
for(i7 in 1:2)
{
for (i6 in 1:2){
for(i5 in 1:2){
for(i4 in 1:2){
for(i3 in 1:2){
for(i2 in 1:2){
for(i1 in 1:2){
mm[j,8]<-(-1)^i8
mm[j,7]<-(-1)^i7
mm[j,6]<-(-1)^i6
mm[j,5]<-(-1)^i5
mm[j,4]<- (-1)^i4
mm[j,3]<- (-1)^i3
mm[j,2]<- (-1)^i2
mm[j,1]<-(-1)^i1
j<-j+1
}
}
}
}
}
}
}
break
}
mm[j:(2^z),]<- -mm[1:j-1,]
mm
mm*cambio
y<-matix(0,dim(mm),1)
y<-matrix(0,dim(mm),1)
y
dim(mm)
vector(sum(mm))
mm
vector(sum(mm,centro))
mm
centro
mm+as.matrix(centro)
as.matrix(centro)
mm+as.matrix(centro)'
<.
.z.
<<<
<-
z-alfkapsmdfkps
''
mm+T(as.matrix(centro))
mm+t(as.matrix(centro))
do.call(centro, 2)
do.call(2, centro)
centro
mm
mm2<-mm
mm2
mm2<-centro
mm2
mm2
mm
mm+centro
mm
mm[,]
duplicate(centro)
duplicate(centro,3)
t(replicate(centro,2))
replicate(centro,2)
replicate(2,centro)
t(replicate(2,centro))
t(replicate(dim(mm)[1],centro))
x<-mm+t(replicate(dim(mm)[1],centro))
x
mm
mm<-mm*cambio
y<-matrix(0,dim(mm)[1],1)
x<-mm+t(replicate(dim(mm)[1],centro))
x
x
x[1]
x[1,]
x[1,1]
x[1,2]
vector
ector<-c(11,23,34,45)
ector
for (i inector<-c(11,23,34,45)){
print(i)
}
for (i in inector<-c(11,23,34,45)){
print(i)
}
mean(c)
pet<-0
for (i in inector<-c(10,7,9,10)){
x<-mean(i,pet)
}
x
pet<-0
for (i in inector<-c(10,7,9,10)){
pet<-mean(i,pet)
}
pet
for (i in inector<-c(10,7,9,10)){
pet<-sum(i,pet)
}
pet
pet<-0
for (i in inector<-c(10,7,9,10)){
pet<-sum(i,pet)
}
pet
mean(pet)
mean(pet,1)
pet<-0
for (i in inector<-c(10,7,9,10)){
pet<-sum(c(i,pet)
}
pet<-0
for (i in inector<-c(10,7,9,10)){
pet<-sum(c(i,pet))
}
pet
pet<-0
for (i in inector<-c(10,7,9,10)){
pet<-mean(c(i,pet))
}
pet
for (i in inector<-c(10,7,9,10)){
te<-c(te,i)
}
for (i in inector<-c(10,7,9,10)){
te<-c()
te<-c(te,i)
}
te
te<-c()
for (i in inector<-c(10,7,9,10)){
te<-c(te,i)
}
te
length(te)
Y<-matrix(1,5,1)
Y
Y[1,]<-3
Y[5,]<-2
Y[3,]<-8
Y
X<-matrix(0,5,3)
X
X[1,]<-sample(1:10,3)
X[1,]
X[2,]<-sample(1:10,3)
X[3,]<-sample(1:10,3)
X[4,]<-sample(1:10,3)
X[5,]<-sample(1:10,3)
x
X
t<-lm(Y~.,X)
t<-lm(Y~.,data=X)
t<-lm(Y~.,data=as.data.frame(X))
t
t$Intercept
t$Coefficients
t$coefficients
coef<-t$coefficients
coef[2]
coef[2][1]
coef[[2]][1]
coef[[1]][1]
coef[[2]][1]
checaz-c(1,2,3)
checa<-c(1,2,3)
checa+coef
checa<-c(0,1,2,3)
checa<-c(0,1,2,3)+coef
checa
coef
coef
coef[[2,4]]
coef[[2:4]]
coef[2:4]
coef[[2:4]][1]
coef
coef[[1]][1]
coef[[2]][1]
centro<-c(5,6,7)
inf<-c(1,1,1)
sup<-c(6,6,6)
inf<centro
sup>centro
witch(inf<centro==true)
wich(inf<centro==true)
wicht(inf<centro==true)
wicth(inf<centro==true)
which(inf<centro==true)
which(inf<centro==T)
which((inf<centro)==true)
which((inf<centro)==t)
which((inf<centro)==T)
which((inf<centro)==F)
centro
centro[which((inf<centro)==F)]
centro[which((inf<centro)==T)]
centro[which((inf<centro)==T)]<-inf[which((inf<centro)==F)]
centro[which((inf<centro)==T)]<-inf[which((inf<centro)==T)]
centro
centro<-c(5,6,7)
centro[which((inf<centro)==F)]<-inf[which((inf<centro)==F)]
centro
centro[which((limSup>=centro)==F)]<-limInfe[which((limSup>=centro)==F)]
centro[which((sup>=centro)==F)]
which((sup>=centro)==F)
(sup>=centro)
(sup>centro)
centro
centro==sup
which((sup>centro)==F)
tr<-c(which((sup>centro)==F),which((inf<centro)==F))
tr
rep(F,5)
rep(F,5)==c(F,F,F,F,F)
all(rep(F,5)==c(F,F,F,F,F))
all(rep(F,5)==c(F,F,F,F,T))
hola1<-c(1,2,3)
hola2<-c(4,5,6)
hola3<-c(7,8,9)
lista<-list(hola1,hola2,hola3)
for(i in lista )
{
print(i)
}
ola1<-c(1,2,3)
hola2<-c(4,5,6)
hola3<-c(7,8,9)
lista<-list(hola1,hola2,hola3)
for(i in lista )
{
for(j in i)
{
print(j)
}
}
centro<-rep(0,8)
string<-"P7_L19"
str_sub(string, 2, 2)
string<-"P7_L19"
string<-"P7_L19"
p<-str_sub(string, 2, 2)
library(stringr)
string<-"P7_L19"
string
p<-str_sub(string, 2, 2)
p
p<-str_sub(string, 3, 2)
p
p<-str_sub(string, 2, 1)
p
p<-str_sub(string, 3, 3)
p
p<-str_sub(string, 4, 5)
p
p<-str_sub(string, 5, 6)
p
# sorting examples using the mtcars dataset
attach(mtcars)
# sort by mpg
newdata <- mtcars[order(mpg),]
mtcars
newdata
install.packages("dplyr")
install.packages("foreign")
install.packages("tidyr")
df <- data.frame(a=1:2, b=letters[1:2])
df
df[rep(seq_len(nrow(df)), each=2),]
df
t<-df[rep(seq_len(nrow(df)), each=2),]
t
t<-df[rep(seq_len(nrow(df)), each=3),]
t
rep(seq_len(nrow(df)
)
)
t<-df[rep(2), each=3),]
t<-df[rep(2, each=3),]
t
t
unlist(t)
t<-df[rep(2, each=3),]
list(t)
t
t[1]
t[,1]
t[1,]
t[2,]
t[2,1]
t[2,2]
dataPrueba <- read.csv("C:/Users/Enrique/Desktop/dataPrueba.csv")
View(dataPrueba)
dataPrueba
repett<-function(row){
if(row$Alt==2 || row$Alt==3){
New<-row
New$set<-2
rbin(dat.larga,New)
}
}
apply(dataPrueba, repett)
apply(dataPrueba, repett())
repett<-function(dataframe){
if(dataframe$Alt==2 || dataframe$Alt==3){
New<-dataframe
New$set<-2
rbin(dat.larga,New)
}
}
dataPrueba
repett(dataPrueba)
reppet
dataPrueba
repett<-function(dataframe){
if(dataframe$Alt==2 || dataframe$Alt==3){
New<-dataframe
New$set<-2
rbin(dataframe,New)
}
}
dataPrueba
repett(dataPrueba)
dataPrueba
dataPrueba
dataPrueba$Alt==2
library(dplyr)
dataprueba%>%
mutate(temporal=Alt==2 || Alt==3)
dataPrueba
dataPrueba%>%
mutate(temporal=Alt==2 || Alt==3)
dataPrueba%>%
mutate(temporal= Alt=='2' || Alt=='3')
dataPrueba%>%
mutate(temporal= Alt=='2')
dataPrueba%>%
mutate(temporal= Alt=='2'| Alt=='3')
dataPrueba.1<- dataPrueba%>% filter(temporal==T)
dataPrueba%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)
dataPrueba.sub%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%mutate(-temporal)
dataPrueba.sub%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%
select(-temmporal,-set)
dataPrueba.sub%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%
select(-temporal,-set)
dataPrueba.sub%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%
select(-temporal)
dataPrueba%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%
select(-temporal)
dataPrueba%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%
select(-temporal,-set)
dataPrueba%>%
mutate(temporal= Alt=='2'| Alt=='3')%>% filter(temporal==T)%>%
select(-temporal,-set)%>%mutate(set = 2)
install.packages("R2Jacks")
setwd("C:/Users/Enrique/Desktop/Tesis/Programas Finales/")
DataL75 <- read.csv("C:/Users/Enrique/Desktop/Tesis/R/Data/DataL75.csv")
View(DataL75)
setwd("C:/Users/Enrique/Desktop/Tesis/Programas Finales/")
source("MCSlabel.R")
data <- DataL75
labels <- data$Labels
x <- data$x
y <- data$y
#Probar con parametros finales para MCS, y cs (4 algoritmos)
centro<-c(400,.01,.9,50,6,4,2,.05,0)
MCSlabel(x, y, labels = labels, cex = 1, method = c("CS"
), allowSmallOverlap = FALSE, trace = T, doPlot = FALSE, Objective="dispersion",
NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],
SAmax=centro[4], InitialSol=inisol,Inef=centro[8])
t <- 209302394
set.seed(t)
inisol<- sample(1:8,length(x),replace=T)
MCSlabel(x, y, labels = labels, cex = 1, method = c("CS"
), allowSmallOverlap = FALSE, trace = T, doPlot = FALSE, Objective="dispersion",
NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],
SAmax=centro[4], InitialSol=inisol,Inef=centro[8])
data <- DataL75
labels <- data$Labels
x <- data$x
y <- data$y
#Probar con parametros finales para MCS, y cs (4 algoritmos)
centro<-c(400,.01,.9,50,6,4,2,.05)
t <- 209302394
set.seed(t)
inisol<- sample(1:8,length(x),replace=T)
plot(x,y,col="red",pch=20,cex=1)
MCSlabel(x, y, labels = labels, cex = 1, method = c("CS"
), allowSmallOverlap = FALSE, trace = T, doPlot = FALSE, Objective="dispersion",
NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],
SAmax=centro[4], InitialSol=inisol,Inef=centro[8])
centro<-c(400,.01,.9,50,6,4,2,.05)
t <- 209302394
set.seed(t)
inisol<- sample(1:8,length(x),replace=T)
plot(x,y,col="red",pch=20,cex=1)
MCSlabel(x, y, labels = labels, cex = 1, method = c("CS"
), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective="dispersion",
NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],
SAmax=centro[4], InitialSol=inisol,Inef=centro[8])
Data50 <- read.csv("C:/Users/Enrique/Desktop/Tesis/R/Data/Data50.csv")
View(Data50)
data <- Data50
labels <- data$Labels
x <- data$x
y <- data$y
#Probar con parametros finales para MCS, y cs (4 algoritmos)
centro<-c(400,.01,.9,50,6,4,2,.05)
t <- 209302394
set.seed(t)
inisol<- sample(1:8,length(x),replace=T)
plot(x,y,col="red",pch=20,cex=1)
MCSlabel(x, y, labels = labels, cex = 1, method = c("CS"
), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective="dispersion",
NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],
SAmax=centro[4], InitialSol=inisol,Inef=centro[8])
