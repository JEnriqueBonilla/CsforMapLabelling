{
    "contents" : "########################### DataL100 con nombres de mujeres ###############\n\ndata <- DataL100.nom\nlabels <- data$nombres\nx <- data$x\ny <- data$y\nseed <- c(124458, 115551, 119801, 116952, 122524)\n\n######################################\n######### algoritmo 1 #################\n######################################\nlista.datos <- list()\ni <- 0\n\ncentro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  \n  set.seed(t)\n  \n  inisol<- sample(1:8,length(x),replace=T)\n  \n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"MCS\")\n  \n  \n  mcssol <- MCSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol,Inef=centro[8])\n  \n  lista.datos[[i]] <- data.table(id = 1:length(mcssol), mcssol = mcssol)\n  \n}\n\n\ndata.mcs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(mcs = mean(mcssol))\n\n######################################\n######### algoritmo 2 #################\n######################################\nlista.datos <- list()\ni <- 0\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t) \n  plot(x,y,col=\"red\",pch=20,cex=1, main =\"Pointlabel (SANN)\")\n  pointsol <- pointlabel2(x, y, labels = labels, cex = 1, method =\"SANN\", allowSmallOverlap = F, trace = T, doPlot = T) \n  \n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(pointsol), pointsol = pointsol)\n  \n}\n\n\ndata.pointlabel <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(pointlabel = mean(pointsol))\n\n# sol = 21.35766 \n\n######################################\n######### algoritmo 3 #################\n######################################\n\nlista.datos <- list()\ni <- 0\n\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS\")\n  \n  cssol <- CSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(cssol), cssol = cssol)\n  \n}\n\n\ndata.cs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs = mean(cssol))\n\n\n#14\n######################################\n######### algoritmo 4 #################\n######################################\nlista.datos <- list()\ni <- 0\n\n#centro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS con LS2\")\n  \n  csls2sol <- CSlabells2(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(csls2sol), csls2sol = csls2sol)\n  \n}\n\n\ndata.csls2 <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs_ls2 = mean(csls2sol))\n\n\n# mcssol\n# cssol\n# csls2sol\n# length(mcssol)\n# length(cssol)\n# length(csls2sol)\n# data.graf <- data.table(id =1:length(csls2sol), mcssol =mcssol, cssol=cssol,  csls2sol= csls2sol)\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\ndata.graf <- data.cs %>%\n  left_join(data.csls2) %>%\n  left_join(data.mcs)  %>%\n  left_join(data.pointlabel)\ncache(\"data.graf\")\n\npunto <- as.numeric(data.graf[50,]$pointlabel)\n\n(graf1 <- ggplot(data.graf, aes(x= id))+geom_line(aes(y = log(mcs,10), color = \"MCS\"))+\n  scale_colour_brewer(name = \"Algoritmos\", palette=\"Set1\") +\n  geom_line(aes(y = log(cs,10), color = \"CS\"))+ \n  geom_line(aes(y =log(cs_ls2,10), color = \"CS con LS2\"))  +\n  geom_line(aes(y =log(pointlabel,10), color = \"Pointlabel\")) +\n  geom_point(aes(x=50, y = log(punto, 10)), color =\"red\")+\n  geom_text(aes(x=50, y = log(punto, 10), label = \"Punto de paro, Pointlabel\"),hjust=-.03,just=0, size=5, fontface=\"plain\")+\n  # geom_text(aes(label=ifelse(log(pointlabel,10)==log(34.63116, 10), \"sANN\",'')),hjust=0,just=0) +\n  xlab(\"Iteraci贸n\") + ylab(\"Logaritmo base 10 de la funci贸n objetivo\") + labs(title =\"DataL100 con nombres de mujeres\")) \n\ncache(\"graf1\")\n\n########################### Data100 con nombres de hombres ###############\n\ndata <- Data100.nom\nlabels <- data$nombres\nx <- data$x\ny <- data$y\nseed <- c(124458, 115551, 119801, 116952, 122524)\n\n######################################\n######### algoritmo 1 #################\n######################################\nlista.datos <- list()\ni <- 0\n\ncentro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  \n  set.seed(t)\n  \n  inisol<- sample(1:8,length(x),replace=T)\n  \n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"MCS\")\n  \n  \n  mcssol <- MCSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol,Inef=centro[8])\n  \n  lista.datos[[i]] <- data.table(id = 1:length(mcssol), mcssol = mcssol)\n  \n}\n\n\ndata.mcs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(mcs = mean(mcssol))\n\n######################################\n######### algoritmo 2 #################\n######################################\nlista.datos <- list()\ni <- 0\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t) \n  plot(x,y,col=\"red\",pch=20,cex=1, main =\"Pointlabel (SANN)\")\n  pointsol <- pointlabel2(x, y, labels = labels, cex = 1, method =\"SANN\", allowSmallOverlap = F, trace = T, doPlot = T) \n  \n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(pointsol), pointsol = pointsol)\n  \n}\n\n\ndata.pointlabel <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(pointlabel = mean(pointsol))\n\n# sol = 21.35766 \n\n######################################\n######### algoritmo 3 #################\n######################################\n\nlista.datos <- list()\ni <- 0\n\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS\")\n  \n  cssol <- CSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(cssol), cssol = cssol)\n  \n}\n\n\ndata.cs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs = mean(cssol))\n\n\n#14\n######################################\n######### algoritmo 4 #################\n######################################\nlista.datos <- list()\ni <- 0\n\n#centro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS con LS2\")\n  \n  csls2sol <- CSlabells2(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(csls2sol), csls2sol = csls2sol)\n  \n}\n\n\ndata.csls2 <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs_ls2 = mean(csls2sol))\n\n\n# mcssol\n# cssol\n# csls2sol\n# length(mcssol)\n# length(cssol)\n# length(csls2sol)\n# data.graf <- data.table(id =1:length(csls2sol), mcssol =mcssol, cssol=cssol,  csls2sol= csls2sol)\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\ndata.graf.2 <- data.cs %>%\n  left_join(data.csls2) %>%\n  left_join(data.mcs)  %>%\n  left_join(data.pointlabel)\ncache(\"data.graf.2\")\n\npunto <- as.numeric(data.graf.2[50,]$pointlabel)\n\n(graf2 <- ggplot(data.graf.2, aes(x= id))+geom_line(aes(y = log(mcs,10), color = \"MCS\"))+\n   scale_colour_brewer(name = \"Algoritmos\", palette=\"Set1\") +\n   geom_line(aes(y = log(cs,10), color = \"CS\"))+ \n   geom_line(aes(y =log(cs_ls2,10), color = \"CS con LS2\"))  +\n   geom_line(aes(y =log(pointlabel,10), color = \"Pointlabel\")) +\n   geom_point(aes(x=50, y = log(punto, 10)), color =\"red\")+\n   geom_text(aes(x=50, y = log(punto, 10), label = \"Punto de paro, Pointlabel\"),hjust=-.03,just=0, size=5, fontface=\"plain\")+\n   # geom_text(aes(label=ifelse(log(pointlabel,10)==log(34.63116, 10), \"sANN\",'')),hjust=0,just=0) +\n   xlab(\"Iteraci贸n\") + ylab(\"Logaritmo base 10 de la funci贸n objetivo\") + labs(title =\"Data100 con nombres de hombres\")) \n\ncache(\"graf2\")\n\n########################### DataL75 con nombres y apellidos ###############\n\ndata <- DataL75.nom\nlabels <- data$nombres\nx <- data$x\ny <- data$y\nseed <- c(124458, 115551, 119801, 116952, 122524)\n\n######################################\n######### algoritmo 1 #################\n######################################\nlista.datos <- list()\ni <- 0\n\ncentro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  \n  set.seed(t)\n  \n  inisol<- sample(1:8,length(x),replace=T)\n  \n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"MCS\")\n  \n  \n  mcssol <- MCSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol,Inef=centro[8])\n  \n  lista.datos[[i]] <- data.table(id = 1:length(mcssol), mcssol = mcssol)\n  \n}\n\n\ndata.mcs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(mcs = mean(mcssol))\n\n######################################\n######### algoritmo 2 #################\n######################################\nlista.datos <- list()\ni <- 0\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t) \n  plot(x,y,col=\"red\",pch=20,cex=1, main =\"Pointlabel (SANN)\")\n  pointsol <- pointlabel2(x, y, labels = labels, cex = 1, method =\"SANN\", allowSmallOverlap = F, trace = T, doPlot = T) \n  \n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(pointsol), pointsol = pointsol)\n  \n}\n\n\ndata.pointlabel <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(pointlabel = mean(pointsol))\n\n# sol = 21.35766 \n\n######################################\n######### algoritmo 3 #################\n######################################\n\nlista.datos <- list()\ni <- 0\n\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS\")\n  \n  cssol <- CSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(cssol), cssol = cssol)\n  \n}\n\n\ndata.cs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs = mean(cssol))\n\n\n#14\n######################################\n######### algoritmo 4 #################\n######################################\nlista.datos <- list()\ni <- 0\n\n#centro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS con LS2\")\n  \n  csls2sol <- CSlabells2(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(csls2sol), csls2sol = csls2sol)\n  \n}\n\n\ndata.csls2 <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs_ls2 = mean(csls2sol))\n\n\n# mcssol\n# cssol\n# csls2sol\n# length(mcssol)\n# length(cssol)\n# length(csls2sol)\n# data.graf <- data.table(id =1:length(csls2sol), mcssol =mcssol, cssol=cssol,  csls2sol= csls2sol)\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\ndata.graf.3 <- data.cs %>%\n  left_join(data.csls2) %>%\n  left_join(data.mcs)  %>%\n  left_join(data.pointlabel)\ncache(\"data.graf.3\")\n\npunto <- as.numeric(data.graf.3[50,]$pointlabel)\n\n(graf3 <- ggplot(data.graf.3, aes(x= id))+geom_line(aes(y = log(mcs,10), color = \"MCS\"))+\n   scale_colour_brewer(name = \"Algoritmos\", palette=\"Set1\") +\n   geom_line(aes(y = log(cs,10), color = \"CS\"))+ \n   geom_line(aes(y =log(cs_ls2,10), color = \"CS con LS2\"))  +\n   geom_line(aes(y =log(pointlabel,10), color = \"Pointlabel\")) +\n   geom_point(aes(x=50, y = log(punto, 10)), color =\"red\")+\n   geom_text(aes(x=50, y = log(punto, 10), label = \"Punto de paro, Pointlabel\"),hjust=-.03,just=0, size=5, fontface=\"plain\")+\n   # geom_text(aes(label=ifelse(log(pointlabel,10)==log(34.63116, 10), \"sANN\",'')),hjust=0,just=0) +\n   xlab(\"Iteraci贸n\") + ylab(\"Logaritmo base 10 de la funci贸n objetivo\") + labs(title =\"DataL75 con nombres y apellidos\")) \n\ncache(\"graf3\")\n########################### Nueva base de datos con apellidos ###############\n\ndata <- Data81.nom\nlabels <- data$nombres\nx <- data$x\ny <- data$y\nseed <- c(124458, 115551, 119801, 116952, 122524)\n\n######################################\n######### algoritmo 1 #################\n######################################\nlista.datos <- list()\ni <- 0\n\ncentro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  \n  set.seed(t)\n  \n  inisol<- sample(1:8,length(x),replace=T)\n  \n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"MCS\")\n  \n  \n  mcssol <- MCSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol,Inef=centro[8])\n  \n  lista.datos[[i]] <- data.table(id = 1:length(mcssol), mcssol = mcssol)\n  \n}\n\n\ndata.mcs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(mcs = mean(mcssol))\n\n######################################\n######### algoritmo 2 #################\n######################################\nlista.datos <- list()\ni <- 0\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t) \n  plot(x,y,col=\"red\",pch=20,cex=1, main =\"Pointlabel (SANN)\")\n  pointsol <- pointlabel2(x, y, labels = labels, cex = 1, method =\"SANN\", allowSmallOverlap = F, trace = T, doPlot = T) \n  \n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(pointsol), pointsol = pointsol)\n  \n}\n\n\ndata.pointlabel <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(pointlabel = mean(pointsol))\n\n# sol = 21.35766 \n\n######################################\n######### algoritmo 3 #################\n######################################\n\nlista.datos <- list()\ni <- 0\n\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS\")\n  \n  cssol <- CSlabel(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(cssol), cssol = cssol)\n  \n}\n\n\ndata.cs <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs = mean(cssol))\n\n\n#14\n######################################\n######### algoritmo 4 #################\n######################################\nlista.datos <- list()\ni <- 0\n\n#centro <- c(3000,.01,.975,100,9,3,2,.35)\nfor(t in seed){ \n  i <- i + 1\n  set.seed(t)\n  inisol<- sample(1:8,length(x),replace=T)\n  \n  plot(x,y,col=\"red\",pch=20,cex=1, main = \"CS con LS2\")\n  \n  csls2sol <- CSlabells2(x, y, labels = labels, cex = 1, method = c(\"CS\" \n  ), allowSmallOverlap = FALSE, trace = T, doPlot = T, Objective=\"dispersion\", \n  NuClusters=centro[5], Taumax=centro[6], Bmax=centro[7], T0=centro[1], TE=centro[2], alpha=centro[3],\n  SAmax=centro[4], InitialSol=inisol)\n  \n  \n  lista.datos[[i]] <- data.table(id = 1:length(csls2sol), csls2sol = csls2sol)\n  \n}\n\n\ndata.csls2 <- lista.datos  %>% rbindlist %>% group_by(id)  %>% summarise(cs_ls2 = mean(csls2sol))\n\n\n# mcssol\n# cssol\n# csls2sol\n# length(mcssol)\n# length(cssol)\n# length(csls2sol)\n# data.graf <- data.table(id =1:length(csls2sol), mcssol =mcssol, cssol=cssol,  csls2sol= csls2sol)\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\n# data.graf.1 <- data.table(id =1:length(mcssol), resultado =mcssol, algoritmo = rep(\"mcsol\", length(mcssol)))\ndata.graf.4 <- data.cs %>%\n  left_join(data.csls2) %>%\n  left_join(data.mcs)  %>%\n  left_join(data.pointlabel)\ncache(\"data.graf.4\")\n\npunto <- as.numeric(data.graf.4[50,]$pointlabel)\n\n(graf4 <- ggplot(data.graf.4, aes(x= id))+geom_line(aes(y = log(mcs,10), color = \"MCS\"))+\n   scale_colour_brewer(name = \"Algoritmos\", palette=\"Set1\") +\n   geom_line(aes(y = log(cs,10), color = \"CS\"))+ \n   geom_line(aes(y =log(cs_ls2,10), color = \"CS con LS2\"))  +\n   geom_line(aes(y =log(pointlabel,10), color = \"Pointlabel\")) +\n   geom_point(aes(x=50, y = log(punto, 10)), color =\"red\")+\n   geom_text(aes(x=50, y = log(punto, 10), label = \"Punto de paro, Pointlabel\"),hjust=-.03,just=0, size=5, fontface=\"plain\")+\n   # geom_text(aes(label=ifelse(log(pointlabel,10)==log(34.63116, 10), \"sANN\",'')),hjust=0,just=0) +\n   xlab(\"Iteraci贸n\") + ylab(\"Logaritmo base 10 de la funci贸n objetivo\") + labs(title =\"Nueva base de datos con apellidos\") ) \n\ncache(\"graf4\")\n",
    "created" : 1460512061760.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1126537760",
    "id" : "2A1C31B5",
    "lastKnownWriteTime" : 1444318055,
    "path" : "~/Repositorios/2015/graficas/src/03_genera_desempe帽o_4datasets.R",
    "project_path" : "src/03_genera_desempe帽o_4datasets.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}